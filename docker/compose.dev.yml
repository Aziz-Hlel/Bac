services:

  api:
    build:
      context: ..
      dockerfile: ${PROJECT_ROOT}/docker/Dockerfile.dev.api
    restart: unless-stopped
    env_file:
      - ${PROJECT_ROOT}/config/.env.dev
      - ${PROJECT_ROOT}/.env.local
      - ${PROJECT_ROOT}/.env
    ports:
      - '${SERVER_PORT:-8080}:${SERVER_PORT:-8080}'
      - "5005:5005"  # Debug port
    volumes:
      # Volume mount for hot reload - critical for development
      - ${PROJECT_ROOT}/apps/api/src:/app/apps/api/src
      - ${PROJECT_ROOT}/apps/api/pom.xml:/app/apps/api/pom.xml
      - ${PROJECT_ROOT}/apps/api/target:/app/apps/api/target
      # Maven cache to avoid re-downloading dependencies
      - maven-cache-dev:/root/.m2
    depends_on:
      db:
        condition: service_healthy
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3



  db:
    image: postgres:latest
  
    env_file:
    - ${PROJECT_ROOT}/config/.env.dev
    - ${PROJECT_ROOT}/.env.local
    - ${PROJECT_ROOT}/.env

    ports:
    - '${DB_PORT:-5432}:${DB_PORT:-5432}'

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} "]
      interval: 5s
      retries: 10
      timeout: 5s

    volumes:
      - db_data_dev:/var/lib/postgresql/data

volumes:
  db_data_dev:
    driver: local
  maven-cache-dev:
    driver: local
